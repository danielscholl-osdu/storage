# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
  branches:
    include:
    - master
  paths:
    exclude:
      - README.md
      - .gitignore

pool:
  name: Hosted Ubuntu 1604
  demands: maven

steps:
- task: Maven@3
  displayName: 'build, test, code coverage'
  inputs:
    mavenPomFile: 'pom.xml'
    options: '--settings ./configuration/settings.xml -DVSTS_FEED_TOKEN=$(VSTS_FEED_TOKEN)'
    #testResultsFiles: '**/*/TEST-*.xml'
    #codeCoverageToolOption: JaCoCo
    goals: 'clean install'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: 'testing'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/storage-integration-tests.zip'
    replaceExistingArchive: true

- task: CopyFiles@2
  displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
  inputs:
    SourceFolder:
    Contents: |
     provider/storage-byoc/target/*-spring-boot.jar
     provider/storage-gcp/target/*-spring-boot.jar
     provider/storage-gcp/src/main/appengine/app.yaml
     provider/storage-gcp/src/main/resources/application.properties
     provider/storage-gcp/scripts/deploy.sh
    TargetFolder: '$(build.artifactstagingdirectory)'
    flattenFolders: true

- task: CopyFiles@2
  displayName: 'Copy Azure artifacts for maven deploy to: $(build.artifactstagingdirectory)'
  inputs:
    SourceFolder:
    Contents: |
      pom.xml
      provider/storage-azure/maven/settings.xml
      provider/storage-azure/pom.xml
      provider/storage-azure/target/*-spring-boot.jar
    TargetFolder: '$(build.artifactstagingdirectory)'

- task: CopyFiles@2
  displayName: 'Copy AWS artifacts for maven deploy to: $(build.artifactstagingdirectory)'
  inputs:
    SourceFolder:
    Contents: |
      provider/storage-aws/CloudFormation
      provider/storage-aws/Dockerfile
      provider/storage-aws/buildspec-post-deploy.yml
      provider/storage-aws/buildspec-pre-deploy.yml
      provider/storage-aws/target/*-spring-boot.jar
    TargetFolder: '$(build.artifactstagingdirectory)'
    
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
  condition: succeededOrFailed()
